version: '3.7'

services:
  db:
    build:
      context: .
      dockerfile: docker/db.Dockerfile
    volumes:
      - ./volumes:/var/lib/postgresql/data/
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=sso
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U postgres"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    command: sh -c "./cli/create_and_populate_database.bash && python manage.py runserver 0.0.0.0:8100"
    volumes:
      - .:/code
    ports:
      - "8100:8100"
    links:
      - db:db
    restart: always
    environment:
      - DATABASE_HOST=db
    depends_on:
      - db
    #     condition: service_healthy

  frontend:
    build: frontend
    command: npm start
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    ports:
      - "3100:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  postgres_data: